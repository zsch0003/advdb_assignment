20140311
--------

 * people, roles/groups, offices
   * just 'group' should cover it - can be singleton, but user's shouldn't care
   * but individuals need to be recorded
 * applicants, application,
 * research area
   * tags and/or school structure
 * workflows
   * _frame-filling_ really
     * _required info_
     * _source doc_, _entered by_, _verified by_
   * create, edit by user
   * series of steps 
     * person role involve, purpose of step, pre-reqs, post-reqs
     * or step suggestions, with manual progression
     * hand-over to group for purpose
       * 'action'
       * could be to hand-over to self 
     * flag for attention
 * aggregation of documents
   * common docs, plus appendices with description field
     * _mandatory docs_
   * and conversation records
     * phone, email
   * attached to a particular stage?
     * nah - too hard
 * proforma letters
   *

 * very few repeatable cases, formulae
 * need to support description, tracking, discovery
   * support quick status overviews
   * _comments_
   * _latest change_
   * like a version control system really
   * record what has most recently been asked for
     * _hand-over_ to applicant
     * _rfi_
     * _rfa_
 * don't get in the way with too much process proscription
 * topic tags


20140313
--------

 * Paul Colder
   * schools HR coordinator
 * current db:
   * email
     * originate to one or more
     * 'dear esteemed prof...'
     * sometimes attaches info about prev deg, research interests
     * if it's an area of interest to potential supervisor, then they start a
       conversation for information gathering
     * then formal app starts
     * initial contact process v. unstructured
     * more than one person gets involved - no visibility of each other
     * things get forgotten
   * please can we have more structure
     * speed up processing
     * esp. if student looks good
     * if not likely to go ahead, resolve this asap
     * consolidate all this info
     * various ppl in uni
     * ∃ beginnings of a schema
       * absolute starting essentials
       * rough conceptual schema
       * ∃ unspec.d entities
       * relationships to be confirmed
       * should look at the official process & forms etc on the web
         * should be a good place to start
         * form-based could be difficult to translated to rdb schema
         * should do this
           * nb differences between domestic & international
         * _we want to use this_
         * could get backing by uni
           * uni develops in-house or tenders out
         * looking at official app material
           * boring but necessary
             * how would applicant pay
               * no academic interest
             * similarly visas
             * we're more interested in academic
               * grades, academic interests,
 * questions from us:
   * workflows
     * in general this would get in the way
     * more of a repository
     * to the extent of checklists
   * out-of-bounds research interests
     * ie broadcast inquiries
     * not worth following-up
       * need to do initial filtering by uni recipient of contact email
       * if put in, needs to stay there
       * get culled at the first step
       * _stop multiple academics replying to same applicant_
         * if someone drops it, we wouldn't have this problem
       * need to check - is it already there
         * keep track of multiple potential supervisors
     * do we want to force applicant to use a web-based system
       * that steps further beyond this system
         * academic staff are entering this information
           * is this worth following up at all
           * ⇒ noisy data
           * professional staff may be doing this
   * how many staff?
     * 40-50
     * all would get these from time to time
     * could be 10-15 per week
     * atm, ignoring two thirds
   * updating this when new documents
   * first contact
     * non-normal
     * most common - paragraph of text
       * details about applicant
         * academent transcript
         * cv
         * research proposal
         * very many different doc formats (mostly pdf)
   * need to decide function and boundaries of system
     * make sure you don't overreach
     * mission statement
   * minimum requirement
     * Pauls min
       * academeic statement for qualifying degree (masters/honours)
       * a research proposal
       * payment
       * cv
       * ie checklist
       * ie unstructured

  * users
    * comp. sci. academics
    * mathemicians who will get frustrated
    * need to cover the spectrum
    *

  * areas of research
    * start with a finite list
      * academics have a list - ie their web page
      * support adding more
    * FOR codes
      * field of research codes
      * gov provided things
      * coarse-grained (4/5 to cover the school)
      * also need keywords / free text
    * uni staff std web page
      * areas of research
        * FORs, and
        * supervisory interests
          * could distill these
    * ∃ find a supervisor web page (flinders)
      * could be a good source
      * Office of Graduate Studies

  * correspondence
    * hyperlinks or document data in the DB
    * shouldn't put the data itself in DB
      * for each applicant:
        * gen. a folder with ID
        * save all docs in here
        * in DB, can resolve folder
        * much of this would be in front end
        * we just need folder name, number of files
        

  * _no frontend_
    * keep it in mind
    * need to recommend an implementation

  * GPA is non-std

  * school has a shared file space
    * eg statement of assessement methods


  * handing-over
    * yes need to support this
    * alerts may be sufficient
      * notification trigger - filtered to research interests
        * matching research area
        * don't forget, at least 2 supervisors, so need to keep them all
          informed
        * research may well cross areas
        
  * response correspondence may have files attached
    * 'record all correspondence' means put in a record of date, time, person
      who responded etc - not correspondence itself
      * ie comments, timestamped
      * make a note that it's done

  * most things on checklist could be found on official web-based
    *

  * _define user views required_
    * plain english or grid
  * once this is done, go back to user/client and ask them about it
    * and make refinements
    * ie _review conceptual diagram_
  * and we should be thinking all the way through test requirements
    * data types and
  * conceptual design due week 6
    * tutors will give tech feed back
    * Paul & Denise will give user feed back
      

20140326
--------

Requirements spec todo:

 * data formats
 * GPA score details
   * warn if GPA isn't good enough
     * http://www.foreigncredits.com/Resources/GPA-Calculator/
   * 
 * 'proforma' not 'template'
   * acknowledgement of receipt
 * more detail on staff tracking
   * name and timestamp of the person who created the record
 * academic staff make report of potential candidates showing summary of
   application - filtered to research area
 * more details about FoR codes
   * dynamic keywords
 * new applications since a specified date
 *

 * [Connelly p 365]
   * initial db size
     * There is only a need to record currently active applications, not to
       record old applications.
     * Hence, in this case the rate of growth is far more important than the
       initial size.
   * db rate of growth
     * There are 40 members of CSEM staff and most would be contacted by 20-40
       potential applicants during peak periods
     * Of these, at least one third would be immediately judged unsuitable and
       never be recorded in our system.
   * types and average number of record searches
     * Most frequent searches are expected to be recalling applications that
       have been worked on recently. This may be run 100 times per weekday.
     * Next most frequent search would be searching for applications given
       matching Field of Research codes. This may be run 30 times per weekday.
     * And next searching for record by name, when deciding whether to create
       new records.
   * networking and shared access requirements
     * We need to support at least 10 staff using the application
       simultaneously.
     * 
   * performance
     * All searches should return within one second.
   * security
     * Only the information a staff member requires to do their job will be
       allowed.
     * Views will be used to restrict operations available to certain users.
   * backup and recovery
     * The database should be backed-up every week night.
     * Recovery procedures should be tested every three months to ensure they
       can be relied upon.
   * legal issues
     * Of primary concern here is privacy legislation, due to the collation of
       personal information. Access will have to be logged and shown to always
       be in the course of members of staff work.
   

20140403
--------

 * mark-up of Staff inheritance reln
   * currently 'a set'?
 * application requires RHD staff member as manages
   * may need to relax this - be able to create an application w/o manager
 * publication
   * +series title etc etc etc
 * documents
   * links fromm docs to, e.g. visa, publication, etc
 * GPA
   * how to do this?
 * referee
   * spoken english vs written
   * same ref multiple applicants?
   * distinct refs same applicant?
 * comments other than decisions?
   * or is every comment a type of decsision
 * last modification date
   * every change require a comment?
 * proformas
 * checklist
 * document versions
 * keeping a history of hand-overs?
   * timestamps? or mark as 'previous'?
 * 


 * comments
   * optionally specialised to decision, hand-over, rfi etc


20140410
--------

transaction numbering:

 * s was last
   * added n
   * added o


20140508
--------

Current issues

 * what is StudyLoadLocation
 * are we allowed to go and change earlier submissions?
 * do we need fills out and enters in?
 * is version number part of the primary key for application?
 * publication and visa have applicationID - shouldn't it be applicantid?
 * is application a weak entity
 * what happened to superclass/subclass with staff
 * can we rename Uni Staff Member to Staff
 * how to derrive non-identifying relationships?
 * in Document: discrepancy between DocID and AppDocID
 * applicant multiplicity with application and degree won't allow creation in
   comfortable order
 * shouldn't uni staff member enters in be 0..*?


20140510
--------

 * as it stands, we won't know which app doc is related to which application. we
   may need to re-instate relationship between application and document


